"""init DB

Revision ID: effcf3577476
Revises: e8c84abc350a
Create Date: 2025-03-10 21:57:45.354069

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'effcf3577476'
down_revision: Union[str, None] = 'e8c84abc350a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bio_materials',
    sa.Column('bio_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bio_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('bio_id')
    )
    op.create_table('doctors',
    sa.Column('doc_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('doc_last_name', sa.String(length=100), nullable=False),
    sa.Column('doc_first_name', sa.String(length=100), nullable=False),
    sa.Column('doc_middle_name', sa.String(length=100), nullable=True),
    sa.Column('doc_clinic', sa.String(length=100), nullable=True),
    sa.Column('doc_specialization', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('doc_id')
    )
    op.create_table('laboratories',
    sa.Column('lab_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lab_name', sa.String(length=100), nullable=False),
    sa.Column('lab_address', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('lab_id')
    )
    op.create_table('measurement_units',
    sa.Column('unit_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unit_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('unit_id')
    )
    op.create_table('patients',
    sa.Column('pat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pat_last_name', sa.String(length=100), nullable=False),
    sa.Column('pat_first_name', sa.String(length=100), nullable=False),
    sa.Column('pat_middle_name', sa.String(length=100), nullable=True),
    sa.Column('pat_gender', sa.Enum('male', 'female', 'other', name='genderenum'), nullable=False),
    sa.Column('pat_birth_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('pat_id')
    )
    op.create_table('research_catalog',
    sa.Column('rch_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rch_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('rch_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('analyses',
    sa.Column('ana_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ana_patient_id', sa.Integer(), nullable=False),
    sa.Column('ana_doctor_id', sa.Integer(), nullable=True),
    sa.Column('ana_research_id', sa.Integer(), nullable=False),
    sa.Column('ana_laboratory_id', sa.Integer(), nullable=False),
    sa.Column('ana_biomaterial_id', sa.Integer(), nullable=False),
    sa.Column('ana_sample_taken', sa.DateTime(), nullable=False),
    sa.Column('ana_sample_received', sa.DateTime(), nullable=True),
    sa.Column('ana_result_printed', sa.DateTime(), nullable=True),
    sa.Column('ana_age_years', sa.Integer(), nullable=False),
    sa.Column('ana_age_months', sa.Integer(), nullable=False),
    sa.Column('ana_comment', sa.String(length=500), nullable=True),
    sa.Column('ana_description', sa.String(length=500), nullable=True),
    sa.Column('ana_deviation_reason', sa.String(length=500), nullable=True),
    sa.Column('ana_expected_norm', sa.String(length=500), nullable=True),
    sa.Column('ana_target_range', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['ana_biomaterial_id'], ['bio_materials.bio_id'], ),
    sa.ForeignKeyConstraint(['ana_doctor_id'], ['doctors.doc_id'], ),
    sa.ForeignKeyConstraint(['ana_laboratory_id'], ['laboratories.lab_id'], ),
    sa.ForeignKeyConstraint(['ana_patient_id'], ['patients.pat_id'], ),
    sa.ForeignKeyConstraint(['ana_research_id'], ['research_catalog.rch_id'], ),
    sa.PrimaryKeyConstraint('ana_id')
    )
    op.create_table('patient_links',
    sa.Column('link_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['patients.pat_id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['patients.pat_id'], ),
    sa.PrimaryKeyConstraint('link_id')
    )
    op.create_table('analysis_results',
    sa.Column('ars_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ars_analysis_id', sa.Integer(), nullable=False),
    sa.Column('ars_value', sa.Float(), nullable=False),
    sa.Column('ars_reference_range', sa.String(length=100), nullable=False),
    sa.Column('ars_reference_min', sa.Float(), nullable=False),
    sa.Column('ars_reference_max', sa.Float(), nullable=False),
    sa.Column('ars_unit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ars_analysis_id'], ['analyses.ana_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ars_unit_id'], ['measurement_units.unit_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('ars_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('analysis_results')
    op.drop_table('patient_links')
    op.drop_table('analyses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('research_catalog')
    op.drop_table('patients')
    op.drop_table('measurement_units')
    op.drop_table('laboratories')
    op.drop_table('doctors')
    op.drop_table('bio_materials')
    # ### end Alembic commands ###
